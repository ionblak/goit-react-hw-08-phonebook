{"version":3,"sources":["redux/Contacts/contacts-reducer.js","redux/auth/auth-reduser.js","redux/store.js","routes.js","redux/auth/auth-selectors.js","Component/Navigation/Navigation.jsx","Component/AuthBar/AuthBar.jsx","Component/UserMenu/default-img.png","Component/UserMenu/UserMenu.jsx","Component/NavBar/NavBar.jsx","Component/PrivateRoute/PrivateRoute.jsx","Component/PublicRoute/PublicRoute.jsx","App.js","index.js","redux/Contacts/contacts-actions.js","redux/auth/auth-operations.js","Component/Container/Container.jsx","redux/auth/auth-actions.js","Component/LoaderContainer/LoaderContainer.jsx"],"names":["itemsReducer","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","filterReducer","filterOutContacts","loading","addContactRequest","deleteContactRequest","fetchContactsRequest","deleteContactError","addContactError","fetchContactsError","setError","error","combineReducers","items","initialUserState","name","email","user","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","registerError","loginError","logoutError","getCurrentUserError","IsAuthenticated","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReduser","contacts","contactsReducer","devTools","process","persistor","persistStore","routes","home","register","login","getIsAuthenticated","getUserName","useStyles","createUseStyles","nav","display","navLink","color","marginRight","isActive","Navigation","classes","useSelector","className","exact","to","activeClassName","authBar","AuthBar","justifyContent","alignItems","userAvatar","borderRadius","button","paddingRight","paddingLeft","marginLeft","backgroundColor","borderColor","UserMenu","dispatch","useDispatch","src","avatar","alt","width","height","type","onClick","logOut","header","headerContainer","NavBar","isAuthenticated","Container","PrivateRoute","Component","component","redirectTo","routeProps","render","props","PublicRoute","restricted","HomeView","lazy","ContactsView","LoginView","RegisterView","App","useEffect","getCurrentUser","fallback","LoaderContainer","path","ReactDOM","StrictMode","document","getElementById","createAction","axios","defaults","baseURL","headers","common","Authorization","credentials","a","post","response","data","message","logIn","getState","pesistedToken","get","container","margin","right","left","padding","children","position","top","transform","timeout"],"mappings":"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","file":"static/js/main.e76ad9c4.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterOutContacts,\r\n} from './contacts-actions';\r\n\r\nconst INITIAL_CONTACTS = [];\r\n\r\nconst itemsReducer = createReducer(INITIAL_CONTACTS, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterOutContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [deleteContactRequest]: () => true,\r\n  [fetchContactsRequest]: () => true,\r\n\r\n  [addContactSuccess]: () => false,\r\n  [deleteContactSuccess]: () => false,\r\n  [fetchContactsSuccess]: () => false,\r\n\r\n  [deleteContactError]: () => false,\r\n  [addContactError]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\nconst setError = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [deleteContactError]: setError,\r\n  [addContactError]: setError,\r\n  [fetchContactsError]: setError,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n  error,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\nconst IsAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\nconst loading = createReducer(false, {\r\n  [registerRequest]: () => true,\r\n  [loginRequest]: () => true,\r\n  [logoutRequest]: () => true,\r\n  [getCurrentUserRequest]: () => true,\r\n\r\n  [registerSuccess]: () => false,\r\n  [loginSuccess]: () => false,\r\n  [logoutSuccess]: () => false,\r\n  [getCurrentUserSuccess]: () => false,\r\n\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [logoutError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  IsAuthenticated,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './Contacts/contacts-reducer';\r\nimport authReduser from './auth/auth-reduser';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\nconst authPersistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReduser),\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\nconst persistor = persistStore(store);\r\nexport { store, persistor };\r\n","const routes = {\r\n  home: '/',\r\n  contacts: '/contacts',\r\n  register: '/register',\r\n  login: '/login',\r\n};\r\nexport default routes;\r\n","const getIsAuthenticated = state => state.auth.IsAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport { getIsAuthenticated, getUserName };\r\n","import { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  nav: {\r\n    display: 'flex',\r\n  },\r\n  navLink: {\r\n    color: 'white',\r\n    marginRight: '10px',\r\n  },\r\n  isActive: {\r\n    color: 'orange',\r\n  },\r\n});\r\n\r\nconst Navigation = () => {\r\n  const classes = useStyles();\r\n  const IsAuthenticated = useSelector(getIsAuthenticated);\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <NavLink\r\n        exact\r\n        to={routes.home}\r\n        className={classes.navLink}\r\n        activeClassName={classes.isActive}\r\n      >\r\n        Home\r\n      </NavLink>\r\n      {IsAuthenticated && (\r\n        <NavLink\r\n          to={routes.contacts}\r\n          className={classes.navLink}\r\n          activeClassName={classes.isActive}\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  authBar: {\r\n    display: 'flex',\r\n  },\r\n  navLink: {\r\n    color: 'black',\r\n    marginRight: '10px',\r\n  },\r\n  isActive: {\r\n    color: 'orange',\r\n  },\r\n});\r\nconst AuthBar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.authBar}>\r\n      <NavLink\r\n        to={routes.login}\r\n        className={classes.navLink}\r\n        activeClassName={classes.isActive}\r\n      >\r\n        Login\r\n      </NavLink>\r\n      <NavLink\r\n        to={routes.register}\r\n        className={classes.navLink}\r\n        activeClassName={classes.isActive}\r\n      >\r\n        Register\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthBar;\r\n","export default __webpack_public_path__ + \"static/media/default-img.3d99fc51.png\";","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport { createUseStyles } from 'react-jss';\r\nimport avatar from './default-img.png';\r\n\r\nconst useStyles = createUseStyles({\r\n  user: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  userAvatar: {\r\n    marginRight: '5px',\r\n    borderRadius: '50%',\r\n  },\r\n  button: {\r\n    display: 'block',\r\n    paddingRight: '10px',\r\n    paddingLeft: '10px',\r\n\r\n    marginLeft: '10px',\r\n    backgroundColor: 'rgba(181, 86, 38, 0.34)',\r\n    color: 'white',\r\n    borderRadius: '5px',\r\n    borderColor: 'orange',\r\n    '&:hover': {\r\n      color: 'orange',\r\n    },\r\n  },\r\n});\r\n\r\nconst UserMenu = () => {\r\n  const classes = useStyles();\r\n\r\n  const name = useSelector(getUserName);\r\n  const dispatch = useDispatch();\r\n  const handleClick = () => dispatch(logOut());\r\n  return (\r\n    <div className={classes.user}>\r\n      <img\r\n        className={classes.userAvatar}\r\n        src={avatar}\r\n        alt=\"avatar\"\r\n        width=\"32\"\r\n        height=\"32\"\r\n      />\r\n      <span>Hi,{name}</span>\r\n      <button className={classes.button} type=\"button\" onClick={handleClick}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nimport Navigation from '../Navigation';\r\nimport AuthBar from '../AuthBar';\r\nimport UserMenu from '../UserMenu';\r\nimport Container from '../Container';\r\n\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  header: {\r\n    backgroundColor: 'rgb(54, 140, 163)',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n  },\r\n});\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  return (\r\n    <header className={classes.header}>\r\n      <Container>\r\n        <div className={classes.headerContainer}>\r\n          <Navigation />\r\n          {isAuthenticated ? <UserMenu /> : <AuthBar />}\r\n        </div>\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import { Redirect, Route } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst PrivateRoute = ({ component: Component, redirectTo, ...routeProps }) => {\r\n  const IsAuthenticated = useSelector(getIsAuthenticated);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        IsAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { Redirect, Route } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({ component: Component, redirectTo, ...routeProps }) => {\r\n  const IsAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        IsAuthenticated && routeProps.restricted ? (\r\n          <Redirect to={redirectTo} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { Switch } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport { useEffect } from 'react';\nimport routes from './routes';\nimport NavBar from './Component/NavBar';\nimport PrivateRoute from './Component/PrivateRoute';\nimport PublicRoute from './Component/PublicRoute';\nimport LoaderContainer from './Component/LoaderContainer';\nimport { useDispatch } from 'react-redux';\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"home-page\" */),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"ContactsView\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"LoginView\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"RegisterView\" */),\n);\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n  return (\n    <div>\n      <NavBar />\n      <Suspense fallback={<LoaderContainer />}>\n        <Switch>\n          <PublicRoute exact path={routes.home} component={HomeView} />\n          <PrivateRoute\n            path={routes.contacts}\n            component={ContactsView}\n            redirectTo={routes.login}\n          />\n          <PublicRoute\n            path={routes.login}\n            restricted\n            component={LoginView}\n            redirectTo={routes.contacts}\n          />\n          <PublicRoute\n            path={routes.register}\n            restricted\n            component={RegisterView}\n            redirectTo={routes.contacts}\n          />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n// import { BrowserRouter } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nconst fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nconst fetchContactsError = createAction(\r\n  'contacts/fetchContactsError',\r\n);\r\n\r\nconst addContactRequest = createAction(\r\n  'contacts/addContactRequest',\r\n);\r\nconst addContactSuccess = createAction(\r\n  'contacts/addContactSuccess',\r\n);\r\nconst addContactError = createAction(\r\n  'contacts/addContactError',\r\n);\r\n\r\nconst deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nconst deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nconst deleteContactError = createAction(\r\n  'contacts/deleteContactError',\r\n);\r\n\r\nconst filterOutContacts = createAction(\r\n  'contacts/filterOut',\r\n);\r\n\r\nexport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterOutContacts,\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: pesistedToken },\r\n  } = getState();\r\n  if (!pesistedToken) {\r\n    return;\r\n  }\r\n  token.set(pesistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { register, logIn, logOut, getCurrentUser };\r\n","import React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    margin: {\r\n      right: 'auto',\r\n      left: 'auto',\r\n    },\r\n    padding: '20px',\r\n    width: '280px',\r\n  },\r\n  '@media (min-width: 720px)': {\r\n    container: {\r\n      width: 680,\r\n    },\r\n  },\r\n  '@media (min-width: 1200px)': {\r\n    container: {\r\n      width: 1160,\r\n    },\r\n  },\r\n});\r\nconst Container = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return <div className={classes.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSucces');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSucces');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSucces');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSucces');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  LoaderContainer: {\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n  },\r\n});\r\n\r\nconst LoaderContainer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.LoaderContainer}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"rgb(54, 140, 163)\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderContainer;\r\n"],"sourceRoot":""}