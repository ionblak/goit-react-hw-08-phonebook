{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Component/ContactForm/ContactForm.module.css","../node_modules/uuid/dist/esm-browser/rng.js","redux/Contacts/contacts-selectors.js","Component/ContactListItem/ContactListItem.jsx","Component/ContactsList/ContactsList.jsx","Component/ContactsList/ContactsList.container.js","redux/Contacts/contacts-operations.js","Component/Filter/Filter.jsx","Component/ContactForm/ButtonForm.jsx","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Component/ContactForm/ContactForm.jsx","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getRandomValues","getValueFilter","state","contacts","filter","getLoading","loading","getfilteredContacts","createSelector","items","allContacts","normalizedFilter","toLowerCase","contact","name","includes","useStyles","createUseStyles","button","marginLeft","backgroundColor","border","borderRadius","cursor","item","marginBottom","ContactListItem","number","id","onDeleteContact","classes","className","type","onClick","ContactList","filteredContacts","map","connect","dispatch","deleteContactRequest","axios","delete","then","deleteContactSuccess","catch","error","deleteContactError","message","deleteContact","ContactsList","input","padding","outline","boxShadow","Filter","useSelector","useDispatch","titel","placeholder","onChange","e","filterOutContacts","target","margin","right","left","top","bottom","display","width","ButtonForm","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","v4","options","buf","rnds","random","Contactform","labelInputIdName","uuidv4","labelInputIdNumber","useState","setName","setNumber","handleChange","currentTarget","resetForm","styles","form","onSubmit","preventDefault","some","alert","addContactRequest","post","data","addContactSuccess","addContactError","addContact","label","htmlFor","required","ContactsView","isLoading","useEffect","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","Container","ContactForm","LoaderContainer"],"mappings":"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","file":"static/js/ContactsView.de044900.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2RzSc\",\"label\":\"ContactForm_label__mb-qu\",\"input\":\"ContactForm_input__279gE\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getValueFilter = state => state.contacts.filter;\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getfilteredContacts = createSelector(\r\n  [getAllContacts, getValueFilter],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport { getValueFilter, getfilteredContacts, getLoading };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  button: {\r\n    marginLeft: '10px',\r\n    backgroundColor: 'white',\r\n    border: ['1px', 'solid', 'grey'],\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: ' rgba(116, 113, 255, 0.34)',\r\n    },\r\n  },\r\n  item: {\r\n    marginBottom: '10px',\r\n  },\r\n});\r\n\r\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <li className={classes.item}>\r\n      <span>{name}</span>: <span>{number}</span>\r\n      <button\r\n        className={classes.button}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({ filteredContacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(item => (\r\n        <ContactListItem\r\n          key={item.id}\r\n          id={item.id}\r\n          name={item.name}\r\n          number={item.number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import ContactsList from './ContactsList';\r\nimport { connect } from 'react-redux';\r\nimport { getfilteredContacts } from '../../redux/Contacts/contacts-selectors';\r\nimport { deleteContact } from '../../redux/Contacts/contacts-operations';\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredContacts: getfilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ContactsList);\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\n\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact = contact => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nexport { fetchContacts, addContact, deleteContact };\r\n","import React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getValueFilter } from '../../redux/Contacts/contacts-selectors';\r\nimport { filterOutContacts } from '../../redux/Contacts/contacts-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  filter: {\r\n    marginBottom: '20px',\r\n  },\r\n  input: {\r\n    padding: '5px',\r\n    outline: 'none',\r\n    '&:focus': {\r\n      border: ['2px', 'solid', 'blue'],\r\n      boxShadow: [\r\n        'inset',\r\n        '0px',\r\n        '0px',\r\n        '3px',\r\n        '3px',\r\n        'rgba(116, 113, 255, 0.34)',\r\n      ],\r\n    },\r\n  },\r\n});\r\n\r\nconst Filter = () => {\r\n  const classes = useStyles();\r\n  const value = useSelector(getValueFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className={classes.filter}>\r\n      <h3 className={classes.titel}>Find contacts by name</h3>\r\n      <input\r\n        className={classes.input}\r\n        type=\"text\"\r\n        placeholder=\"Search contact\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={e => dispatch(filterOutContacts(e.target.value))}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  button: {\r\n    cursor: 'pointer',\r\n    margin: {\r\n      right: 'auto',\r\n      left: 'auto',\r\n      top: '20px',\r\n      bottom: '20px',\r\n    },\r\n    display: 'block',\r\n    padding: '5px',\r\n    width: '140px',\r\n    backgroundColor: 'transparent',\r\n    borderRadius: '5px',\r\n    '&:hover': {\r\n      backgroundColor: ' rgba(116, 113, 255, 0.34)',\r\n    },\r\n  },\r\n});\r\n\r\nconst ButtonForm = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <button className={classes.button} type=\"submit\">\r\n      Add contact\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonForm;\r\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/Contacts/contacts-operations';\r\nimport { getfilteredContacts } from '../../redux/Contacts/contacts-selectors';\r\n\r\nimport ButtonForm from './ButtonForm';\r\nimport styles from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Contactform = () => {\r\n  const items = useSelector(getfilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const labelInputIdName = uuidv4();\r\n  const labelInputIdNumber = uuidv4();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    const contact = { name: name, number: number };\r\n    e.preventDefault();\r\n\r\n    const isOridginal = items.some(item => item.name === contact.name);\r\n    if (isOridginal) {\r\n      alert(`${contact.name} is already in contacts`);\r\n      resetForm();\r\n      return;\r\n    }\r\n    dispatch(addContact(contact));\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const handleChange = ({ currentTarget }) => {\r\n    const { name, value } = currentTarget;\r\n    if (name === 'name') setName(value);\r\n    if (name === 'number') setNumber(value);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label} htmlFor={labelInputIdName}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        id={labelInputIdName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        required\r\n        placeholder=\"Enter name\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      ></input>\r\n      <label className={styles.label} htmlFor={labelInputIdNumber}>\r\n        Number\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        id={labelInputIdNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        required\r\n        placeholder=\"Enter you number\"\r\n        value={number}\r\n        onChange={handleChange}\r\n      ></input>\r\n      <ButtonForm />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Contactform;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContacts } from '../redux/Contacts/contacts-operations';\r\nimport { getLoading } from '../redux/Contacts/contacts-selectors';\r\nimport Container from '../Component/Container';\r\nimport ContactList from '../Component/ContactsList';\r\nimport Filter from '../Component/Filter';\r\nimport ContactForm from '../Component/ContactForm';\r\nimport LoaderContainer from '../Component/LoaderContainer';\r\n\r\nconst ContactsView = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(getLoading);\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Phonebook</h2>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      {isLoading ? <LoaderContainer /> : <ContactList />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}